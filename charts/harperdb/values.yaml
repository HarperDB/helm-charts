##
# -- Base Config
#######################
# Set initial username for Operations API access. Not defining this will autogenerate a user.
# updating this will not change existing credentials
username: ""
# Set initial password for Operations API access. Not defining this will autogenerate a pass and put it in a secret.
# updating this will not change existing credentials
password: ""
# existing secretName: # name of secret. must contain `username` and `password` values
existingSecretRef: ""

# how many http threads do we want node to create
threads: "1"
# set operations API to use ssl cert. will create self-signed cert on initial run if not present.
operationsApiHttps: true
# enable/disable component API
componentApiEnabled: true
# set component API to use ssl cert. will create self-signed cert on initial run if not present.
componentApiHttps: true

# extra env to pass into harperdb. Values stored in configmap
configMapExtraEnv: {}
#  someKey: someValue

##
# -- Clustering Config
#######################
clustering:
  # enable/disble clustering
  enabled: false
  # clustering username must be the same across all nodes in cluster
  username: ""
  # clustering password must be the same across all nodes in cluster
  password: ""
  # unique name for clustering config. defaults to {{ harperdb.fullname }} (same as pod)
  nodeName: ""
  # existing secretName: # name of secret. must contain `clusterUsername` and `clusterPassword` values
  existingSecretRef: ""


# number of desired HarperDB instances for this chart. Usually will be 1
replicaCount: 1
# revision history limit
revisionHistoryLimit: 3

image:
  repository: harperdb/harperdb
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 1000
  fsGroup: 1000
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false

service:
  # "ClusterIP": used in conjunction with an ingress-controller such as nginx
  # "LoadBalancer": used with a cloud provider based tcp loadbalancer
  type: ClusterIP
  # port for standard operations API
  operationsPort: 9925
  # port for access to component API
  componentPort: 9926
  # port for clustering API
  clusteringPort: 9932

persistentStorage:
  # do we want to enable persistent storage
  enabled: true
  # "-" for default storage class
  storageClass: "-"
  # size of storage volume
  size: 1Gi
  # path of storage volume
  mountPath: "/home/harperdb/hdb"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hdb1.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# define probe to test if service is unrecoverable or not
livenessProbe:
  httpGet:
    path: /health
    port: operations
  initialDelaySeconds: 5
  periodSeconds: 10

# define probe to test if service is ready to accept requests
readinessProbe:
  httpGet:
    path: /health
    port: operations
  initialDelaySeconds: 5
  periodSeconds: 10

# define probe to preempt liveness probe
startupProbe: {}

nodeSelector: {}

tolerations: []

affinity: {}
#  podAntiAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      - labelSelector:
#          matchExpressions:
#            - key: "fabric.harperdb.io"
#              operator: In
#              values:
#                - core
#        topologyKey: "kubernetes.io/hostname"

# extra labels to add to resources created from this chart
extraLabels: {}

# Custom priority class for different treatment by the scheduler
priorityClassName:  # system-node-critical

# Allow specifying a runtimeClassName other than the default one (ie: nvidia)
runtimeClassName:  # nvidia

# Allows specifying a custom scheduler name
schedulerName:  # sane-safe-scheduler

# dns policy for the pod
dnsPolicy: ClusterFirst

# Optional DNS settings, configuring the ndots option may resolve nslookup issues on some Kubernetes setups.
dnsConfig: {}
#   options:
#     - name: ndots
#       value: "1"

# -- Enable/disable the generation of environment variables for services.
# [[ref]](https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service)
enableServiceLinks: false

# https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#hook-handler-execution
terminationGracePeriodSeconds: 60
