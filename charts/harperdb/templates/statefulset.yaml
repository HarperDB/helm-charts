apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "harperdb.fullname" . }}
  {{- with (merge (.Values.extraLabels | default dict) (include "harperdb.labels" $ | fromYaml)) }}
  labels: {{- toYaml . | nindent 4 }}
  {{- end }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "harperdb.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "harperdb.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "harperdb.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "harperdb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
        {{- end }}
        {{- with .Values.runtimeClassName }}
      runtimeClassName: {{ . }}
        {{- end }}
        {{- with .Values.schedulerName }}
      schedulerName: {{ . }}
        {{- end }}
        {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
        {{- else }}
      dnsPolicy: ClusterFirst
        {{- end }}
        {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
        {{- end }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
          - configMapRef:
              name: {{ include "harperdb.fullname" . }}
          - secretRef:
              name: {{ include "harperdb.secrets.ref" . }}
          {{- if and ( .Values.clustering.enabled ) (ne "harperdb.secrets.ref" "harperdb.clustering.secrets.ref") }}
          - secretRef:
              name: {{ include "harperdb.secrets.clustering.ref" . }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: operations
              containerPort: {{ .Values.service.operationsPort }}
              protocol: TCP
           {{- if .Values.componentApiEnabled }}
            - name: component
              containerPort: {{ .Values.service.componentPort }}
              protocol: TCP
           {{- end }}
           {{- if .Values.clustering.enabled }}
            - name: clustering
              containerPort: {{ .Values.service.clusteringPort }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.persistentStorage.enabled }}
          volumeMounts:
          - name: "{{ include "harperdb.fullname" . }}-hdb"
            mountPath: {{ .Values.persistentStorage.mountPath }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistentStorage.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ printf "%s-hdb" (include "harperdb.fullname" .) }}
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ required (printf "size is required for PVC %v" .name) .Values.persistentStorage.size | quote }}
          {{- if .Values.persistentStorage.storageClass }}
        storageClassName: {{ if (eq "-" .Values.persistentStorage.storageClass) }}""{{- else }}{{ .Values.persistentStorage.storageClass | quote }}{{- end }}
          {{- end }}
      {{- end }}